{
  "global": {
    "title": "Microgateway",
    "browsehappy": "You are using an <strong>outdated</strong> browser. Please <a href=\"http://browsehappy.com/?locale=en\">upgrade your browser</a> to improve your experience.",
    "dashbord": "Dashbord",
    "grh": "RH",
    "withAccount": "With Connexion Account",
    "menu": {
      "home": "Home",
      "jhipster-needle-menu-add-element": "JHipster will add additional menu entries here (do not translate!)",
      "entities": {
        "main": "Entities",
        "micropeopleDepartment": "Departments",
        "micropeopleEmployee": "Employes",
        "microfilemanagerMshzFile": "Mshz File",
        "microprocessProcess": "Process",
        "microprocessTask": "Task",
        "microprocessTaskDependency": "Task Dependency",
        "department": "Department",
        "employee": "Employee",
        "microprocessLogigram": "Logigram",
        "microprocessCondNode": "Cond Node",
        "microprocessEdgeInfo": "Edge Info",
        "workCalender": "Work Calender",
        "publicHoliday": "Public Holiday",
        "microprocessJustification": "Justification",
        "appUser": "App User",
        "userExtra": "User Extra",
        "microprocessProcedure": "Procedure",
        "microperfTypeobjectif": "Typeobjectif",
        "microperfTypeindicator": "Typeindicator",
        "microperfTypeObjectif": "Type Objectif",
        "typeObjectif": "Type Objectif",
        "typeindicator": "Typeindicator",
        "fonction": "Fonction",
        "objectif": "Objectif",
        "indicator": "Indicator",
        "microstreamNotification": "Notification",
        "modelEntity": "Model Entity",
        "privilege": "Privilege",
        "microprocessTaskfile": "Taskfile",
        "microprocessTaskUser": "Task User",
        "microprocessTaskValidationControl": "Task Validation Control",
        "microrisqueRisk": "Risk Management",
        "microrisqueRiskType": "Risk Type",
        "microrisqueControlType": "Control Type",
        "microrisqueControlMaturity": "Control Maturity",
        "microrisqueControl": "Control",
        "notification": "Notification",
        "micropartenerPartenerCategory": "Partener Category",
        "micropartenerField": "Field",
        "micropartenerPartener": "Partener",
        "micropartenerPartenerField": "Partener Field",
        "microproviderTender": "Tender",
        "microproviderTenderDoc": "Tender Doc",
        "microproviderTenderAnswer": "Tender Answer",
        "microproviderTenderFile": "Tender File",
        "microproviderTenderAnswerDoc": "Tender Answer Doc",
        "micropartenerEvaluationCriteria": "Evaluation Criteria",
        "micropartenerPartenerCategoryEvaluator": "Partener Category Evaluator",
        "microproviderProviderEvaluation": "Provider Evaluation",
        "micropartenerPartenerCategoryValidator": "Partener Category Validator",
        "microproviderTenderAnswerValidation": "Tender Answer Validation",
        "microproviderTenderProviderSelection": "Tender Provider Selection",
        "microproviderTenderProviderSelectionValidation": "Tender Provider Selection Validation",
        "microproviderTenderAnswerExecution": "Tender Answer Execution",
        "microproviderExecutionValidation": "Execution Validation",
        "microproviderExecutionValidationFile": "Execution Validation File",
        "microproviderTenderAnswerExecutionFile": "Tender Answer Execution File",
        "microproviderTenderExecutionEvaluation": "Tender Execution Evaluation",
        "micropartenerFieldFile": "Field File",
        "micropartenerPartenerFieldFile": "Partener Field File",
        "microproviderProviderExpedition": "Provider Expedition",
        "dynamicField": "Dynamic Field",
        "microproviderTenderField": "Tender Field",
        "microproviderTenderAnswerField": "Tender Answer Field",
        "microproviderProviderExecutionAverage": "Provider Execution Average",
        "microprocessTaskStatusTraking": "Task Status Traking",
        "microprocessTaskStatusTrakingFile": "Task Status Traking File",
        "qmanagerQuery": "Query",
        "qmanagerQueryUser": "Query User",
        "qmanagerQueryField": "Query Field",
        "qmanagerQueryFieldResponse": "Query Field Response",
        "qmanagerQueryFieldResponseFile": "Query Field Response File",
        "qmanagerQueryUserValidator": "Query User Validator",
        "qmanagerQueryClientType": "Query Client Type",
        "qmanagerQueryClient": "Query Client",
        "qmanagerQCategory": "Q Category",
        "qmanagerQueryFile": "Query File",
        "qmanagerQueryInstance": "Query Instance",
        "qmanagerQueryInstanceValidation": "Query Instance Validation",
        "qmanagerQueryInstanceValidationFile": "Query Instance Validation File",
        "microagendaAgendaEvent": "Agenda Event",
        "microagendaEventFile": "Event File",
        "microagendaEventParticipant": "Event Participant",
        "microagendaEventExeption": "Event Exeption",
        "microprocessEventTrigger": "Event Trigger",
        "microprocessTaskItem": "Task Item",
        "microprocessItemCheckJustificationFile": "Item Check Justification File",
        "microprocessItemCheckJustification": "Item Check Justification",
        "microprojectLevel": "Level",
        "microprojectProjectEdgeInfo": "Project Edge Info",
        "microprojectProjectEventTrigger": "Project Event Trigger",
        "microprojectProjectItemCheckJustification": "Project Item Check Justification",
        "microprojectProjectItemCheckJustificationFile": "Project Item Check Justification File",
        "microprojectProjectProcess": "Project Process",
        "microprojectProjectPublicHoliday": "Project Public Holiday",
        "microprojectProjectTask": "Project Task",
        "microprojectProjectTaskFile": "Project Task File",
        "microprojectProjectTaskItem": "Project Task Item",
        "microprojectProjectTaskStatusTraking": "Project Task Status Traking",
        "microprojectProjectTaskStatusTrakingFile": "Project Task Status Traking File",
        "microprojectProjectTaskSubmission": "Project Task Submission",
        "microprojectProjectTaskUser": "Project Task User",
        "microprojectProjectTaskValidationControl": "Project Task Validation Control",
        "microprojectProject": "Project",
        "microprojectProjectCategory": "Project Category",
        "microprojectProjectCalendar": "Project Calendar",
        "microprojectProjectCondNode": "Project Cond Node",
        "microprojectProjectFile": "Project File",
        "microprojectProjectComment": "Project Comment",
        "microprojectProjectCommentFile": "Project Comment File",
        "microproviderTenderProvider": "Tender Provider",
        "microstockEquipement": "Equipement",
        "microstockEngeneering": "Engeneering",
        "microstockConsommable": "Consommable",
        "microstockChangement": "Changement",
        "microstockApprovisionnement": "Approvisionnement",
        "microprocessProcessCategoryUser": "Process Category User",
        "microrisqueAudit": "Audit",
        "microrisqueAuditUser": "Audit User",
        "microrisqueAuditStatusTraking": "Audit Status Traking",
        "microrisqueAuditStatusTrakingFile": "Audit Status Traking File",
        "microrisqueAuditRecommendationFile": "Audit Recommendation File",
        "microrisqueAuditRecommendation": "Audit Recommendation",
        "microrisqueAuditCycle": "Audit Cycle",
        "microrisqueAuditRecomUser": "Audit Recom User",
        "microprojectProjectStartableTask": "Project Startable Task",
        "qmanagerQPonctualTaskInfo": "Q Ponctual Task Info",
        "microrisqueAuditEventTrigger": "Audit Event Trigger",
        "jhipster-needle-menu-add-entry": "JHipster will add additional entities here (do not translate!)"
      },
      "account": {
        "main": "Account",
        "settings": "Settings",
        "password": "Password",
        "sessions": "Sessions",
        "login": "Sign in",
        "logout": "Sign out",
        "register": "Register"
      },
      "admin": {
        "main": "Administration",
        "gateway": "Gateway",
        "userManagement": "User management",
        "tracker": "User tracker",
        "metrics": "Metrics",
        "health": "Health",
        "configuration": "Configuration",
        "logs": "Logs",
        "audits": "Audits",
        "apidocs": "API",
        "database": "Database",
        "jhipster-needle-menu-add-admin-element": "JHipster will add additional menu entries here (do not translate!)"
      },
      "language": "Language"
    },
    "form": {
      "username.label": "Username",
      "username.placeholder": "Your username",
      "currentpassword.label": "Current password",
      "currentpassword.placeholder": "Current password",
      "newpassword.label": "New password",
      "newpassword.placeholder": "New password",
      "confirmpassword.label": "New password confirmation",
      "confirmpassword.placeholder": "Confirm the new password",
      "email.label": "Email",
      "email.placeholder": "Your email"
    },
    "messages": {
      "info": {
        "authenticated": {
          "prefix": "If you want to ",
          "link": "sign in",
          "suffix": ", you can try the default accounts:<br/>- Administrator (login=\"admin\" and password=\"admin\") <br/>- User (login=\"user\" and password=\"user\")."
        },
        "register": {
          "noaccount": "You don't have an account yet?",
          "link": "Register a new account"
        }
      },
      "error": {
        "dontmatch": "The password and its confirmation do not match!"
      },
      "validate": {
        "newpassword": {
          "required": "Your password is required.",
          "minlength": "Your password is required to be at least 8 characters.",
          "maxlength": "Your password cannot be longer than 50 characters.",
          "strength": "Password strength:"
        },
        "confirmpassword": {
          "required": "Your confirmation password is required.",
          "minlength": "Your confirmation password is required to be at least 4 characters.",
          "maxlength": "Your confirmation password cannot be longer than 50 characters."
        },
        "email": {
          "required": "Your email is required.",
          "invalid": "Your email is invalid.",
          "minlength": "Your email is required to be at least 5 characters.",
          "maxlength": "Your email cannot be longer than 50 characters."
        }
      }
    },
    "field": {
      "id": "ID"
    },
    "ribbon": {
      "dev": "Development"
    },
    "item-count": "Showing {{first}} - {{second}} of {{total}} items.",
    "words": {
      "detail": "Detail",
      "details": "Details"
    }
  },
  "entity": {
    "action": {
      "addblob": "Add blob",
      "addimage": "Add image",
      "back": "Back",
      "cancel": "Cancel",
      "delete": "Delete",
      "edit": "Edit",
      "open": "Open",
      "save": "Save",
      "view": "View"
    },
    "detail": {
      "field": "Field",
      "value": "Value"
    },
    "delete": {
      "title": "Confirm delete operation"
    },
    "validation": {
      "required": "This field is required.",
      "minlength": "This field is required to be at least {{ min }} characters.",
      "maxlength": "This field cannot be longer than {{ max }} characters.",
      "min": "This field should be at least {{ min }}.",
      "max": "This field cannot be more than {{ max }}.",
      "minbytes": "This field should be at least {{ min }} bytes.",
      "maxbytes": "This field cannot be more than {{ max }} bytes.",
      "pattern": "This field should follow pattern for {{ pattern }}.",
      "number": "This field should be a number.",
      "datetimelocal": "This field should be a date and time.",
      "patternLogin": "This field can only contain letters, digits and e-mail addresses."
    }
  },
  "error": {
    "internalServerError": "Internal server error",
    "server.not.reachable": "Server not reachable",
    "url.not.found": "Not found",
    "NotNull": "Field {{ fieldName }} cannot be empty!",
    "Size": "Field {{ fieldName }} does not meet min/max size requirements!",
    "userexists": "Login name already used!",
    "emailexists": "Email is already in use!",
    "idexists": "A new {{ entityName }} cannot already have an ID",
    "idnull": "Invalid ID",
    "file": {
      "could.not.extract": "Could not extract file",
      "not.image": "File was expected to be an image but was found to be \"{{ fileType }}\""
    }
  },
  "footer": "This is your footer"
}
